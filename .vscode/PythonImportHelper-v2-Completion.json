[
    {
        "label": "toga",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "toga",
        "description": "toga",
        "detail": "toga",
        "documentation": {}
    },
    {
        "label": "Pack",
        "importPath": "toga.style",
        "description": "toga.style",
        "isExtraImport": true,
        "detail": "toga.style",
        "documentation": {}
    },
    {
        "label": "COLUMN",
        "importPath": "toga.style.pack",
        "description": "toga.style.pack",
        "isExtraImport": true,
        "detail": "toga.style.pack",
        "documentation": {}
    },
    {
        "label": "ROW",
        "importPath": "toga.style.pack",
        "description": "toga.style.pack",
        "isExtraImport": true,
        "detail": "toga.style.pack",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "threading",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "threading",
        "description": "threading",
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "tempfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tempfile",
        "description": "tempfile",
        "detail": "tempfile",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "StempelUhr",
        "kind": 6,
        "importPath": "src.stempeluhr.app",
        "description": "src.stempeluhr.app",
        "peekOfCode": "class StempelUhr(toga.App):\n    def startup(self):\n        self.current_user = None\n        self.start_time = None\n        self.total_time = timedelta()\n        self.work_hours = self.load_work_hours()\n        self.timer_running = False\n        self.main_box = toga.Box(style=Pack(direction=COLUMN, padding=10))\n        self.username_input = toga.TextInput(placeholder=\"Username\", style=Pack(flex=1, padding=(0, 5)))\n        self.password_input = toga.PasswordInput(placeholder=\"Password\", style=Pack(flex=1, padding=(0, 5)))",
        "detail": "src.stempeluhr.app",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "src.stempeluhr.app",
        "description": "src.stempeluhr.app",
        "peekOfCode": "def main():\n    return StempelUhr()\nif __name__ == '__main__':\n    main().main_loop()",
        "detail": "src.stempeluhr.app",
        "documentation": {}
    },
    {
        "label": "run_tests",
        "kind": 2,
        "importPath": "tests.stempeluhr",
        "description": "tests.stempeluhr",
        "peekOfCode": "def run_tests():\n    project_path = Path(__file__).parent.parent\n    os.chdir(project_path)\n    # Determine any args to pass to pytest. If there aren't any,\n    # default to running the whole test suite.\n    args = sys.argv[1:]\n    if len(args) == 0:\n        args = [\"tests\"]\n    returncode = pytest.main(\n        [",
        "detail": "tests.stempeluhr",
        "documentation": {}
    },
    {
        "label": "test_first",
        "kind": 2,
        "importPath": "tests.test_app",
        "description": "tests.test_app",
        "peekOfCode": "def test_first():\n    \"\"\"An initial test for the app.\"\"\"\n    assert 1 + 1 == 2",
        "detail": "tests.test_app",
        "documentation": {}
    }
]